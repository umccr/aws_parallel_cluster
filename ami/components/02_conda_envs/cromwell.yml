name: cromwell
description: Install cromwell conda env into the ami for the ec2 user
schemaVersion: 1.0

phases:
  - name: build
    steps:
      - name: makefolders
        action: ExecuteBash
        inputs:
          commands:
            - |
              mkdir -p /opt/cromwell/configs/
              mkdir -p /opt/cromwell/env
              mkdir -p /opt/cromwell/scripts
      - name: download_cromwell_files
        action: S3Download
        inputs:
          - source: "s3://umccr-research-dev/parallel-cluster/cromwell/configs/*"
            destination: "/opt/cromwell/configs/"
          - source: "s3://umccr-research-dev/parallel-cluster/cromwell/env/*"
            destination: "/opt/cromwell/env/"
          - source: "s3://umccr-research-dev/parallel-cluster/cromwell/scripts/*"
            destination: "/opt/cromwell/scripts/"
      - name: cromwell
        action: ExecuteBash
        inputs:
          commands:
            # Update yum
            - |
              yum update -y -q
            # Install java and wget if needed
            - |
              which java 2>/dev/null || amazon-linux-extras install -y -q java-openjdk11
              which wget 2>/dev/null || yum install wget -y
            # Create directory
            # Download cromwell
            # Link Jar to /opt/cromwell/cromwell.jar
            # Running will be something like this
            # java \
            #   -Duser.timezone=${TIMEZONE} \
            #   -Duser.dir=${WORKDIR} \
            #   -Dconfig.file=${CONFIG_FILE} \
            #   -Dwebservice.port=${WEBSERVICE_PORT} \
            #   -DLOG_LEVEL=DEBUG \
            #   -DLOG_MODE=pretty \
            #   -Xms2G \
            #   -Xmx10G \
            #   -XX:ParallelGCThreads=10 \
            #   -jar ${CROMWELL_JAR} server 1>/dev/null &
            # SERVER_PROC_ID=$!
            - |
              cromwell_version="52"
              mkdir -p /opt/cromwell/jar
              wget "https://github.com/broadinstitute/cromwell/releases/download/${cromwell_version}/cromwell-${cromwell_version}.jar" \
                --output-document "/opt/cromwell/jar/cromwell-${cromwell_version}.jar"
              ln -s "/opt/cromwell/jar/cromwell-${cromwell_version}.jar" "/opt/cromwell/jar/cromwell.jar"
            # Create cromwell work dir
            - |
              cromwell_workdir="/scratch/cromwell/"
              mkdir -p "${cromwell_workdir}"
            # Create env for submitting workflows to cromwell
            - |
              CROMWELL_TOOLS_CONDA_ENV_FILE_PATH="/opt/cromwell/env/cromwell_conda_env.yml"
              CROMWELL_TOOLS_CONDA_ENV_NAME="cromwell_tools"
              su - ec2-user \
                -c "cd \$(mktemp -d); \
                    cp \"${CROMWELL_TOOLS_CONDA_ENV_FILE_PATH}\" ./; \
                    conda env create \
                      --file \$(basename \"${CROMWELL_TOOLS_CONDA_ENV_FILE_PATH}\") \
                      --name \"${CROMWELL_TOOLS_CONDA_ENV_NAME}\""
            # Good practise when env first installed
            - |
              CROMWELL_TOOLS_CONDA_ENV_NAME="cromwell_tools"
              su - ec2-user \
                  -c "conda update \
                        --name \"${CROMWELL_TOOLS_CONDA_ENV_NAME}\" \
                        --all \
                        --yes"
            # Add script path to env_vars.sh
            - |
              CROMWELL_SCRIPTS_DIR="/opt/cromwell/scripts"
              CROMWELL_TOOLS_CONDA_ENV_NAME="cromwell_tools"
              su - ec2-user \
                -c "conda activate \"${CROMWELL_TOOLS_CONDA_ENV_NAME}\" && \
                    mkdir -p \"\${CONDA_PREFIX}/etc/conda/activate.d/\" && \
                    echo \"export PATH=\\\"${CROMWELL_SCRIPTS_DIR}:\\\$PATH\"\\\" >> \
                    \"\${CONDA_PREFIX}/etc/conda/activate.d/env_vars.sh\""
